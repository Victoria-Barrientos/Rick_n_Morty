{"ast":null,"code":"const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{3,4}$/i;\nconst regexPassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,10}$/;\nconst regexNumbers = /[0-9]/;\nconst validation = (property, value, errors, setErrors) => {\n  if (property === \"email\") {\n    if (!value) {\n      setErrors({\n        ...errors,\n        [property]: \"El email no puede estar vacío.\"\n      });\n    }\n    if (value.length > 35) {\n      setErrors({\n        ...errors,\n        [property]: \"El email no puede tener mas de 35 caracteres.\"\n      });\n    }\n    if (!regexEmail.test(value)) {\n      setErrors({\n        ...errors,\n        [property]: \"El email debe tener formato Email.\"\n      });\n    } else {\n      setErrors({});\n    }\n  }\n  if (property === \"password\") {\n    if (!value) {\n      setErrors({\n        ...errors,\n        [property]: \"La contraseña no puede estar vacía.\"\n      });\n    }\n    if (!regexPassword.test(value)) {\n      setErrors({\n        ...errors,\n        [property]: \"La contraseña tiene que tener una longitud entre 6 y 10 caracteres.\"\n      });\n    }\n    if (!regexNumbers.test(value)) {\n      setErrors({\n        ...errors,\n        [property]: \"La contraseña tiene que tener al menos un número.\"\n      });\n    } else {\n      setErrors({});\n    }\n  }\n};\nexport default validation;","map":{"version":3,"names":["regexEmail","regexPassword","regexNumbers","validation","property","value","errors","setErrors","length","test"],"sources":["C:/Users/54934/Desktop/PROGRAMACION/HENRY/Proyecto_Integrador/rick_and_morty/src/validation.js"],"sourcesContent":["const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{3,4}$/i;\r\nconst regexPassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,10}$/;\r\nconst regexNumbers = /[0-9]/\r\n\r\nconst validation = (property, value, errors, setErrors) => {\r\n    if (property === \"email\") {\r\n        if(!value) {\r\n            setErrors({\r\n                ...errors,\r\n                [property]: \"El email no puede estar vacío.\"\r\n            })\r\n        } \r\n        if(value.length > 35) {\r\n            setErrors({\r\n                ...errors,\r\n                [property]: \"El email no puede tener mas de 35 caracteres.\"\r\n            })\r\n        }\r\n        if (!regexEmail.test(value)) {\r\n            setErrors({\r\n                ...errors,\r\n                [property]: \"El email debe tener formato Email.\"\r\n            })\r\n        } else {\r\n            setErrors({})\r\n        }\r\n    }\r\n    if (property === \"password\") {\r\n        if(!value) {\r\n            setErrors({\r\n                ...errors,\r\n                [property]: \"La contraseña no puede estar vacía.\"\r\n            })\r\n        } \r\n        if(!regexPassword.test(value)) {\r\n            setErrors({\r\n                ...errors,\r\n                [property]: \"La contraseña tiene que tener una longitud entre 6 y 10 caracteres.\"\r\n            })\r\n        }\r\n        if(!regexNumbers.test(value)) {\r\n            setErrors({\r\n                ...errors,\r\n                [property]: \"La contraseña tiene que tener al menos un número.\"\r\n            })\r\n        }\r\n        else {\r\n            setErrors({})\r\n        }\r\n    }\r\n}\r\n\r\nexport default validation"],"mappings":"AAAA,MAAMA,UAAU,GAAG,2CAA2C;AAC9D,MAAMC,aAAa,GAAG,kEAAkE;AACxF,MAAMC,YAAY,GAAG,OAAO;AAE5B,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEC,SAAS,KAAK;EACvD,IAAIH,QAAQ,KAAK,OAAO,EAAE;IACtB,IAAG,CAACC,KAAK,EAAE;MACPE,SAAS,CAAC;QACN,GAAGD,MAAM;QACT,CAACF,QAAQ,GAAG;MAChB,CAAC,CAAC;IACN;IACA,IAAGC,KAAK,CAACG,MAAM,GAAG,EAAE,EAAE;MAClBD,SAAS,CAAC;QACN,GAAGD,MAAM;QACT,CAACF,QAAQ,GAAG;MAChB,CAAC,CAAC;IACN;IACA,IAAI,CAACJ,UAAU,CAACS,IAAI,CAACJ,KAAK,CAAC,EAAE;MACzBE,SAAS,CAAC;QACN,GAAGD,MAAM;QACT,CAACF,QAAQ,GAAG;MAChB,CAAC,CAAC;IACN,CAAC,MAAM;MACHG,SAAS,CAAC,CAAC,CAAC,CAAC;IACjB;EACJ;EACA,IAAIH,QAAQ,KAAK,UAAU,EAAE;IACzB,IAAG,CAACC,KAAK,EAAE;MACPE,SAAS,CAAC;QACN,GAAGD,MAAM;QACT,CAACF,QAAQ,GAAG;MAChB,CAAC,CAAC;IACN;IACA,IAAG,CAACH,aAAa,CAACQ,IAAI,CAACJ,KAAK,CAAC,EAAE;MAC3BE,SAAS,CAAC;QACN,GAAGD,MAAM;QACT,CAACF,QAAQ,GAAG;MAChB,CAAC,CAAC;IACN;IACA,IAAG,CAACF,YAAY,CAACO,IAAI,CAACJ,KAAK,CAAC,EAAE;MAC1BE,SAAS,CAAC;QACN,GAAGD,MAAM;QACT,CAACF,QAAQ,GAAG;MAChB,CAAC,CAAC;IACN,CAAC,MACI;MACDG,SAAS,CAAC,CAAC,CAAC,CAAC;IACjB;EACJ;AACJ,CAAC;AAED,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}